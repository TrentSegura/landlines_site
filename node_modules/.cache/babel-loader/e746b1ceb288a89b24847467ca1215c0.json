{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/trent/Sites/m12/landlines_02/src/components/Lines.js\";\nimport React, { Component } from 'react';\nimport mapbox from 'mapbox-gl';\nimport './Marker.css';\nimport { placeData } from \"../data/data\";\nexport default class Lines extends Component {\n  render() {\n    const app = this.props.app;\n    const map = app.state.map;\n    mapbox.afterMap.addSource('landlines', {\n      'type': 'geojson',\n      'data': {\n        'type': 'Feature',\n        'properties': {},\n        'geometry': {\n          'type': 'LineString',\n          'coordinates': [placeData[0].coordinates, placeData[1].coordinates, placeData[6].coordinates, placeData[11].coordinates, placeData[3].coordinates, placeData[16].coordinates, placeData[10].coordinates, placeData[6].coordinates, placeData[5].coordinates, placeData[12].coordinates, placeData[8].coordinates, placeData[4].coordinates, placeData[7].coordinates, placeData[9].coordinates, placeData[14].coordinates, placeData[4].coordinates, placeData[8].coordinates, placeData[11].coordinates, placeData[14].coordinates, placeData[15].coordinates, placeData[0].coordinates, placeData[2].coordinates, placeData[13].coordinates, placeData[4].coordinates, placeData[9].coordinates, placeData[2].coordinates, placeData[3].coordinates]\n        }\n      }\n    });\n    mapbox.afterMap.addLayer({\n      'id': 'lines',\n      'type': 'line',\n      'source': 'landlines',\n      'layout': {\n        'line-join': 'round',\n        'line-cap': 'round'\n      },\n      'paint': {\n        'line-color': '#fff',\n        'line-opacity': 0.7,\n        'line-width': 1.5\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/trent/Sites/m12/landlines_02/src/components/Lines.js"],"names":["React","Component","mapbox","placeData","Lines","render","app","props","map","state","afterMap","addSource","coordinates","addLayer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACzCI,EAAAA,MAAM,GAAG;AAEL,UAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAAvB;AACA,UAAME,GAAG,GAAGF,GAAG,CAACG,KAAJ,CAAUD,GAAtB;AAIQN,IAAAA,MAAM,CAACQ,QAAP,CAAgBC,SAAhB,CAA0B,WAA1B,EAAuC;AACnC,cAAQ,SAD2B;AAEnC,cAAQ;AACJ,gBAAQ,SADJ;AAEJ,sBAAc,EAFV;AAGJ,oBAAY;AACR,kBAAQ,YADA;AAER,yBAAe,CACXR,SAAS,CAAC,CAAD,CAAT,CAAaS,WADF,EAEXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAFF,EAGXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAHF,EAIXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WAJH,EAKXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WALF,EAMXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WANH,EAOXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WAPH,EAQXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WARF,EASXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WATF,EAUXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WAVH,EAWXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAXF,EAYXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAZF,EAaXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAbF,EAcXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAdF,EAeXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WAfH,EAgBXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAhBF,EAiBXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAjBF,EAkBXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WAlBH,EAmBXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WAnBH,EAoBXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WApBH,EAqBXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WArBF,EAsBXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAtBF,EAuBXT,SAAS,CAAC,EAAD,CAAT,CAAcS,WAvBH,EAwBXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAxBF,EAyBXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WAzBF,EA0BXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WA1BF,EA2BXT,SAAS,CAAC,CAAD,CAAT,CAAaS,WA3BF;AAFP;AAHR;AAF2B,KAAvC;AAwCAV,IAAAA,MAAM,CAACQ,QAAP,CAAgBG,QAAhB,CAAyB;AACrB,YAAM,OADe;AAErB,cAAQ,MAFa;AAGrB,gBAAU,WAHW;AAIrB,gBAAU;AACN,qBAAa,OADP;AAEN,oBAAY;AAFN,OAJW;AAQrB,eAAS;AACL,sBAAc,MADT;AAEL,wBAAgB,GAFX;AAGL,sBAAc;AAHT;AARY,KAAzB;AAsBR,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA3EwC","sourcesContent":["import React, { Component } from 'react'\nimport mapbox from 'mapbox-gl' \nimport './Marker.css';\nimport { placeData } from \"../data/data\"\n\nexport default class Lines extends Component {\n    render() {\n\n        const app = this.props.app\n        const map = app.state.map\n\n            \n\n                mapbox.afterMap.addSource('landlines', {\n                    'type': 'geojson',\n                    'data': {\n                        'type': 'Feature',\n                        'properties': {},\n                        'geometry': {\n                            'type': 'LineString',\n                            'coordinates': [\n                                placeData[0].coordinates,\n                                placeData[1].coordinates,\n                                placeData[6].coordinates,\n                                placeData[11].coordinates,\n                                placeData[3].coordinates,\n                                placeData[16].coordinates,\n                                placeData[10].coordinates,\n                                placeData[6].coordinates,\n                                placeData[5].coordinates,\n                                placeData[12].coordinates,\n                                placeData[8].coordinates,\n                                placeData[4].coordinates,\n                                placeData[7].coordinates,\n                                placeData[9].coordinates,\n                                placeData[14].coordinates,\n                                placeData[4].coordinates,\n                                placeData[8].coordinates,\n                                placeData[11].coordinates,\n                                placeData[14].coordinates,\n                                placeData[15].coordinates,\n                                placeData[0].coordinates,\n                                placeData[2].coordinates,\n                                placeData[13].coordinates,\n                                placeData[4].coordinates,\n                                placeData[9].coordinates,\n                                placeData[2].coordinates,\n                                placeData[3].coordinates,\n                                ]\n                            }\n                        }    \n                    });\n                \n                mapbox.afterMap.addLayer({\n                    'id': 'lines',\n                    'type': 'line',\n                    'source': 'landlines',\n                    'layout': {\n                        'line-join': 'round',\n                        'line-cap': 'round'\n                        },\n                    'paint': {\n                        'line-color': '#fff',\n                        'line-opacity': 0.7,\n                        'line-width': 1.5\n                     }\n                });\n\n\n    \n       \n        \n            \n                \n        \n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}