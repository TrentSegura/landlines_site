{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/trent/Sites/m12/landlines_02/src/components/Lines.js\";\nimport React, { Component } from 'react';\nimport mapbox from 'mapbox-gl';\nimport './Marker.css';\nimport { placeData } from \"../data/data\";\nexport default class Lines extends Component {\n  render() {\n    const app = this.props.app;\n    const map = app.state.map;\n\n    if (map) {\n      afterMap.on('load', function () {\n        afterMap.addSource('landlines', {\n          'type': 'geojson',\n          'data': {\n            'type': 'Feature',\n            'properties': {},\n            'geometry': {\n              'type': 'LineString',\n              'coordinates': [placeData[0].coordinates, placeData[1].coordinates, placeData[6].coordinates, placeData[11].coordinates, placeData[3].coordinates, placeData[16].coordinates, placeData[10].coordinates, placeData[6].coordinates, placeData[5].coordinates, placeData[12].coordinates, placeData[8].coordinates, placeData[4].coordinates, placeData[7].coordinates, placeData[9].coordinates, placeData[14].coordinates, placeData[4].coordinates, placeData[8].coordinates, placeData[11].coordinates, placeData[14].coordinates, placeData[15].coordinates, placeData[0].coordinates, placeData[2].coordinates, placeData[13].coordinates, placeData[4].coordinates, placeData[9].coordinates, placeData[2].coordinates, placeData[3].coordinates]\n            }\n          }\n        });\n        afterMap.addLayer({\n          'id': 'lines',\n          'type': 'line',\n          'source': 'landlines',\n          'layout': {\n            'line-join': 'round',\n            'line-cap': 'round'\n          },\n          'paint': {\n            'line-color': '#fff',\n            'line-opacity': 0.7,\n            'line-width': 1.5\n          }\n        });\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/trent/Sites/m12/landlines_02/src/components/Lines.js"],"names":["React","Component","mapbox","placeData","Lines","render","app","props","map","state","afterMap","on","addSource","coordinates","addLayer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAO,cAAP;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,eAAe,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AACzCI,EAAAA,MAAM,GAAG;AAEL,UAAMC,GAAG,GAAG,KAAKC,KAAL,CAAWD,GAAvB;AACA,UAAME,GAAG,GAAGF,GAAG,CAACG,KAAJ,CAAUD,GAAtB;;AAEA,QAAIA,GAAJ,EAAQ;AAEJE,MAAAA,QAAQ,CAACC,EAAT,CAAY,MAAZ,EAAoB,YAAW;AAC3BD,QAAAA,QAAQ,CAACE,SAAT,CAAmB,WAAnB,EAAgC;AAC5B,kBAAQ,SADoB;AAE5B,kBAAQ;AACJ,oBAAQ,SADJ;AAEJ,0BAAc,EAFV;AAGJ,wBAAY;AACR,sBAAQ,YADA;AAER,6BAAe,CACXT,SAAS,CAAC,CAAD,CAAT,CAAaU,WADF,EAEXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAFF,EAGXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAHF,EAIXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WAJH,EAKXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WALF,EAMXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WANH,EAOXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WAPH,EAQXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WARF,EASXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WATF,EAUXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WAVH,EAWXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAXF,EAYXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAZF,EAaXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAbF,EAcXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAdF,EAeXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WAfH,EAgBXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAhBF,EAiBXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAjBF,EAkBXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WAlBH,EAmBXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WAnBH,EAoBXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WApBH,EAqBXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WArBF,EAsBXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAtBF,EAuBXV,SAAS,CAAC,EAAD,CAAT,CAAcU,WAvBH,EAwBXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAxBF,EAyBXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WAzBF,EA0BXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WA1BF,EA2BXV,SAAS,CAAC,CAAD,CAAT,CAAaU,WA3BF;AAFP;AAHR;AAFoB,SAAhC;AAwCAH,QAAAA,QAAQ,CAACI,QAAT,CAAkB;AACd,gBAAM,OADQ;AAEd,kBAAQ,MAFM;AAGd,oBAAU,WAHI;AAId,oBAAU;AACN,yBAAa,OADP;AAEN,wBAAY;AAFN,WAJI;AAQd,mBAAS;AACL,0BAAc,MADT;AAEL,4BAAgB,GAFX;AAGL,0BAAc;AAHT;AARK,SAAlB;AAeH,OAxDD;AA0DP;;AAKG,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AA5EwC","sourcesContent":["import React, { Component } from 'react'\nimport mapbox from 'mapbox-gl' \nimport './Marker.css';\nimport { placeData } from \"../data/data\"\n\nexport default class Lines extends Component {\n    render() {\n\n        const app = this.props.app\n        const map = app.state.map\n\n        if (map){\n            \n            afterMap.on('load', function() {\n                afterMap.addSource('landlines', {\n                    'type': 'geojson',\n                    'data': {\n                        'type': 'Feature',\n                        'properties': {},\n                        'geometry': {\n                            'type': 'LineString',\n                            'coordinates': [\n                                placeData[0].coordinates,\n                                placeData[1].coordinates,\n                                placeData[6].coordinates,\n                                placeData[11].coordinates,\n                                placeData[3].coordinates,\n                                placeData[16].coordinates,\n                                placeData[10].coordinates,\n                                placeData[6].coordinates,\n                                placeData[5].coordinates,\n                                placeData[12].coordinates,\n                                placeData[8].coordinates,\n                                placeData[4].coordinates,\n                                placeData[7].coordinates,\n                                placeData[9].coordinates,\n                                placeData[14].coordinates,\n                                placeData[4].coordinates,\n                                placeData[8].coordinates,\n                                placeData[11].coordinates,\n                                placeData[14].coordinates,\n                                placeData[15].coordinates,\n                                placeData[0].coordinates,\n                                placeData[2].coordinates,\n                                placeData[13].coordinates,\n                                placeData[4].coordinates,\n                                placeData[9].coordinates,\n                                placeData[2].coordinates,\n                                placeData[3].coordinates,\n                                ]\n                            }\n                        }    \n                    });\n                \n                afterMap.addLayer({\n                    'id': 'lines',\n                    'type': 'line',\n                    'source': 'landlines',\n                    'layout': {\n                        'line-join': 'round',\n                        'line-cap': 'round'\n                        },\n                    'paint': {\n                        'line-color': '#fff',\n                        'line-opacity': 0.7,\n                        'line-width': 1.5\n                     }\n                });\n\n            });\n    \n    }   \n        \n            \n                \n        \n        return (\n            <div>\n                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}