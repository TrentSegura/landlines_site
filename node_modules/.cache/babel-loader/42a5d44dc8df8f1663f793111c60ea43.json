{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/trent/Sites/m12/landlines_02/src/components/Pins.js\";\nimport React, { Component } from 'react';\nimport mapbox from 'mapbox-gl';\nimport './Pins.css';\nimport data from '../data/map.json';\nexport class Pins extends Component {\n  render() {\n    const app = this.props.app;\n    const map = app.state.map;\n\n    if (map) {\n      data.features.forEach(place => {\n        const coord = [place.geometry.coordinates[0], place.geometry.coordinates[1]];\n        const popup = new mapbox.Popup({\n          closeButton: false,\n          closeOnClick: false\n        });\n        map.on('mouseenter', 'places', function (e) {\n          // Change the cursor style as a UI indicator.\n          map.getCanvas().style.cursor = 'arrow';\n          var coordinates = e.features[0].geometry.coordinates.slice();\n          var description = e.features[0].properties.description; // Ensure that if the map is zoomed out such that multiple\n          // copies of the feature are visible, the popup appears\n          // over the copy being pointed to.\n\n          while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n            coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n          } // Populate the popup and set its coordinates\n          // based on the feature found.\n\n\n          popup.setLngLat(coordinates).setHTML(description).addTo(map);\n        });\n        map.on('mouseleave', 'places', function () {\n          map.getCanvas().style.cursor = '';\n          popup.remove();\n        });\n        popup.setMaxWidth(\"350px\");\n        popup.setHTML( // place.properties.description ?\n        // `\n        // <div class=\"mapboxgl-popup-content-header\">\n        // <h3>${place.properties.name}</h3>\n        // </div>\n        // <div class=\"description\">\n        // ${place.properties.description}\n        // </div>\n        // `               \n        // :\n        `\n                    <div class=\"mapboxgl-popup-content-header\">\n                    <h3>${place.properties.name}</h3>\n                    </div>\n                    `);\n        var el = document.createElement('div');\n        el.id = 'pin-marker';\n        const marker = new mapbox.Marker(el);\n        marker.setPopup(popup);\n        marker.setLngLat(coord);\n        marker.addTo(map);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Pins;","map":{"version":3,"sources":["/Users/trent/Sites/m12/landlines_02/src/components/Pins.js"],"names":["React","Component","mapbox","data","Pins","render","app","props","map","state","features","forEach","place","coord","geometry","coordinates","popup","Popup","closeButton","closeOnClick","on","e","getCanvas","style","cursor","slice","description","properties","Math","abs","lngLat","lng","setLngLat","setHTML","addTo","remove","setMaxWidth","name","el","document","createElement","id","marker","Marker","setPopup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport mapbox from 'mapbox-gl';\nimport './Pins.css'\nimport data from '../data/map.json'\n\nexport class Pins extends Component {\n    render() {\n        const app = this.props.app\n        const map = app.state.map\n        \n        if (map){\n        \n            data.features.forEach((place) => {\n                const coord = [place.geometry.coordinates[0], place.geometry.coordinates[1]]\n            \n                const popup = new mapbox.Popup({\n                    closeButton: false,\n                    closeOnClick: false\n                })\n\n                map.on('mouseenter', 'places', function (e) {\n                    // Change the cursor style as a UI indicator.\n                    map.getCanvas().style.cursor = 'arrow';\n                     \n                    var coordinates = e.features[0].geometry.coordinates.slice();\n                    var description = e.features[0].properties.description;\n                     \n                    // Ensure that if the map is zoomed out such that multiple\n                    // copies of the feature are visible, the popup appears\n                    // over the copy being pointed to.\n                    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                    }\n                     \n                    // Populate the popup and set its coordinates\n                    // based on the feature found.\n                    popup.setLngLat(coordinates).setHTML(description).addTo(map);\n                    });\n\n\n                \n                map.on('mouseleave', 'places', function () {\n                    map.getCanvas().style.cursor = '';\n                    popup.remove();\n                    });\n\n\n                \n\n                popup.setMaxWidth(\"350px\")\n\n                popup.setHTML(\n                    // place.properties.description ?\n\n                    // `\n                    // <div class=\"mapboxgl-popup-content-header\">\n                    // <h3>${place.properties.name}</h3>\n                    // </div>\n                    // <div class=\"description\">\n                    // ${place.properties.description}\n                    // </div>\n                    // `               \n\n                    // :\n\n                    `\n                    <div class=\"mapboxgl-popup-content-header\">\n                    <h3>${place.properties.name}</h3>\n                    </div>\n                    ` )                \n\n\n                var el = document.createElement('div');\n                el.id = 'pin-marker';\n                \n                const marker = new mapbox.Marker(el)\n                marker.setPopup(popup)\n                marker.setLngLat(coord)\n                marker.addTo(map)\n            })\n        }\n        return (\n            <div>\n            </div>\n        )      \n      }\n}\n\nexport default Pins\n"]},"metadata":{},"sourceType":"module"}