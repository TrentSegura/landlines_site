{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/trent/Sites/m12/landlines_02/src/components/Map.js\";\nimport React, { Component } from 'react';\nimport './Map.css';\nimport mapbox from 'mapbox-gl';\nimport { placeData } from '../data/data';\nexport class Map extends Component {\n  componentDidMount() {\n    const app = this.props.app;\n    mapbox.accessToken = 'pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw'; // var bounds = [\n    //     [-110.113384, 35.747004], // Southwest coordinates\n    //     [-102.113384, 39.747004] // Northeast coordinates\n    // ]\n\n    var map = new mapbox.Map({\n      container: 'map',\n      style: \"mapbox://styles/m12-trent/ckg9xlrw62gxc19lc9hbaylmf\",\n      center: [app.state.longitude, app.state.latitude],\n      zoom: app.state.zoom,\n      minZoom: 1,\n      maxZoom: 13,\n      maxPitch: 60,\n      attributionControl: false // maxBounds: bounds\n\n    });\n    map.scrollZoom.disable();\n    const nav = new mapbox.NavigationControl();\n    map.addControl(nav, 'bottom-right');\n    map.addControl(new mapbox.FullscreenControl());\n    this.props.app.setState({\n      map: map\n    });\n    map.on('load', function () {\n      // map.addSource('mapbox-dem', {\n      //     'type': 'raster-dem',\n      //     'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n      //     'tileSize': 512,\n      //     'maxzoom': 14\n      //     });\n      //     // add the DEM source as a terrain layer with exaggerated height\n      // map.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\n      //     // add a sky layer that will show when the map is highly pitched\n      // map.addLayer({\n      //     'id': 'sky',\n      //     'type': 'sky',\n      //     'paint': {\n      //     'sky-type': 'atmosphere',\n      //     'sky-atmosphere-sun': [0.0, 0.0],\n      //     'sky-atmosphere-sun-intensity': 15\n      //     }\n      //     });\n      map.addSource('landlines', {\n        'type': 'geojson',\n        'data': {\n          'type': 'Feature',\n          'properties': {},\n          'geometry': {\n            'type': 'LineString',\n            'coordinates': [placeData[0].coordinates, placeData[1].coordinates, placeData[6].coordinates, placeData[11].coordinates, placeData[3].coordinates, placeData[16].coordinates, placeData[10].coordinates, placeData[6].coordinates, placeData[5].coordinates, placeData[12].coordinates, placeData[8].coordinates, placeData[4].coordinates, placeData[7].coordinates, placeData[9].coordinates, placeData[14].coordinates, placeData[4].coordinates, placeData[8].coordinates, placeData[11].coordinates, placeData[14].coordinates, placeData[15].coordinates, placeData[0].coordinates, placeData[2].coordinates, placeData[13].coordinates, placeData[4].coordinates, placeData[9].coordinates, placeData[2].coordinates, placeData[3].coordinates]\n          }\n        }\n      });\n      map.addLayer({\n        'id': 'lines',\n        'type': 'line',\n        'source': 'landlines',\n        'layout': {\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#fff',\n          'line-opacity': 0.7,\n          'line-width': 1.5\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\nexport default Map;","map":{"version":3,"sources":["/Users/trent/Sites/m12/landlines_02/src/components/Map.js"],"names":["React","Component","mapbox","placeData","Map","componentDidMount","app","props","accessToken","map","container","style","center","state","longitude","latitude","zoom","minZoom","maxZoom","maxPitch","attributionControl","scrollZoom","disable","nav","NavigationControl","addControl","FullscreenControl","setState","on","addSource","coordinates","addLayer","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './Map.css';\nimport mapbox from 'mapbox-gl';\nimport { placeData } from '../data/data'\n\nexport class Map extends Component {\n\n    \n    componentDidMount(){\n\n        const app = this.props.app\n        mapbox.accessToken = 'pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw';\n       \n        // var bounds = [\n        //     [-110.113384, 35.747004], // Southwest coordinates\n        //     [-102.113384, 39.747004] // Northeast coordinates\n        // ]\n\n        var map = new mapbox.Map({\n            container: 'map',\n            style:  \"mapbox://styles/m12-trent/ckg9xlrw62gxc19lc9hbaylmf\",\n            center: [app.state.longitude, app.state.latitude],\n            zoom: app.state.zoom,\n            minZoom: 1,\n            maxZoom: 13,\n            maxPitch: 60,\n            attributionControl: false,\n            // maxBounds: bounds\n            });\n        \n        map.scrollZoom.disable();\n\n        const nav = new mapbox.NavigationControl();\n        map.addControl(nav, 'bottom-right');\n\n        map.addControl(new mapbox.FullscreenControl());\n\n        this.props.app.setState({\n            map: map\n        })\n\n        \n\n        \n\n\n\n\n        map.on('load', function () {\n\n            // map.addSource('mapbox-dem', {\n            //     'type': 'raster-dem',\n            //     'url': 'mapbox://mapbox.mapbox-terrain-dem-v1',\n            //     'tileSize': 512,\n            //     'maxzoom': 14\n            //     });\n            //     // add the DEM source as a terrain layer with exaggerated height\n            // map.setTerrain({ 'source': 'mapbox-dem', 'exaggeration': 1.5 });\n                    \n            //     // add a sky layer that will show when the map is highly pitched\n            // map.addLayer({\n            //     'id': 'sky',\n            //     'type': 'sky',\n            //     'paint': {\n            //     'sky-type': 'atmosphere',\n            //     'sky-atmosphere-sun': [0.0, 0.0],\n            //     'sky-atmosphere-sun-intensity': 15\n            //     }\n            //     });\n\n            map.addSource('landlines', {\n                'type': 'geojson',\n                'data': {\n                    'type': 'Feature',\n                    'properties': {},\n                    'geometry': {\n                        'type': 'LineString',\n                        'coordinates': [\n                            placeData[0].coordinates,\n                            placeData[1].coordinates,\n                            placeData[6].coordinates,\n                            placeData[11].coordinates,\n                            placeData[3].coordinates,\n                            placeData[16].coordinates,\n                            placeData[10].coordinates,\n                            placeData[6].coordinates,\n                            placeData[5].coordinates,\n                            placeData[12].coordinates,\n                            placeData[8].coordinates,\n                            placeData[4].coordinates,\n                            placeData[7].coordinates,\n                            placeData[9].coordinates,\n                            placeData[14].coordinates,\n                            placeData[4].coordinates,\n                            placeData[8].coordinates,\n                            placeData[11].coordinates,\n                            placeData[14].coordinates,\n                            placeData[15].coordinates,\n                            placeData[0].coordinates,\n                            placeData[2].coordinates,\n                            placeData[13].coordinates,\n                            placeData[4].coordinates,\n                            placeData[9].coordinates,\n                            placeData[2].coordinates,\n                            placeData[3].coordinates,\n                            ]\n                        }\n                    }    \n                });\n            \n            map.addLayer({\n                'id': 'lines',\n                'type': 'line',\n                'source': 'landlines',\n                'layout': {\n                    'line-join': 'round',\n                    'line-cap': 'round'\n                    },\n                'paint': {\n                    'line-color': '#fff',\n                    'line-opacity': 0.7,\n                    'line-width': 1.5\n                 }\n            });\n        })\n        \n    }\n    \n    \n    render() { \n\n        return (\n            <div id=\"map\">\n            </div>\n        )\n    }\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}